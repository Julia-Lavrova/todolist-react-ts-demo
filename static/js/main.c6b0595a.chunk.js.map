{"version":3,"sources":["components/Form/index.module.css","components/ListItem/index.module.css","components/App/index.module.css","components/TODOList/index.module.css","components/Form/index.tsx","icons/remove.svg","components/ListItem/index.tsx","components/TODOList/index.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Form","onAdd","useState","value","setValue","onSubmit","e","preventDefault","length","className","styles","form","input","onChange","target","placeholder","type","button","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","d","_ref","svgRef","title","props","viewBox","width","height","ref","ForwardRef","forwardRef","ListItem","item","onRemove","listItem","onClick","listItem__button","TODOList","items","setItems","handleItemRemove","prevItemsState","filter","el","todoList","map","concat","App","app","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c6b0595a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__32yOr\",\"input\":\"Form_input__1vbEq\",\"button\":\"Form_button__1ZR31\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ListItem_listItem__13b7U\",\"listItem__button\":\"ListItem_listItem__button__usvAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1wJzH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"TODOList_todoList__2TyUk\"};","import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport styles from './index.module.css';\n\nfunction Form({ onAdd }: { onAdd: (item: string) => void }) {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!value.length) return;\n\n    onAdd(value);\n    setValue('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <input\n        className={styles.input}\n        value={value}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => setValue(e.target.value)}\n        placeholder=\"Enter new task\"\n      />\n\n      <button type=\"submit\" className={styles.button}>Add task</button>\n    </form>\n  );\n}\n\nexport default Form;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M32 464a48 48 0 0048 48h288a48 48 0 0048-48V128H32zm272-256a16 16 0 0132 0v224a16 16 0 01-32 0zm-96 0a16 16 0 0132 0v224a16 16 0 01-32 0zm-96 0a16 16 0 0132 0v224a16 16 0 01-32 0zM432 32H312l-9.4-18.7A24 24 0 00281.1 0H166.8a23.72 23.72 0 00-21.4 13.3L136 32H16A16 16 0 000 48v32a16 16 0 0016 16h416a16 16 0 0016-16V48a16 16 0 00-16-16z\"\n});\n\nvar SvgRemove = function SvgRemove(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 448 512\",\n    width: 25,\n    height: 25,\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgRemove, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/remove.ae97d51f.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { ReactComponent as RemoveIcon } from 'icons/remove.svg';\nimport styles from './index.module.css';\n\nexport interface ItemProps {\n  item: string;\n  onRemove: (item: string) => void;\n}\n\nfunction ListItem({ item, onRemove }: ItemProps) {\n  return (\n    <li className={styles.listItem}>\n      {item}\n      <button onClick={() => onRemove(item)} className={styles.listItem__button}>\n        <RemoveIcon />\n      </button>\n    </li>\n  );\n}\n\nexport default ListItem;\n","import React, { useState } from 'react';\n\nimport Form from 'components/Form';\nimport ListItem from 'components/ListItem';\n\nimport styles from './index.module.css';\n\nfunction TODOList() {\n  const [items, setItems] = useState(['buy milk', 'tidy up']);\n\n  const handleItemRemove = (item: string) => {\n    setItems((prevItemsState: Array<string>) => prevItemsState.filter(el => el !== item));\n  }\n\n  const handleItemAdd = (item: string) => {\n    setItems((prevItemsState: Array<string>) => prevItemsState.concat(item));\n  }\n\n  return (\n    <>\n      <ul className={styles.todoList}>\n        {items.length === 0 && (\n          <li>There is no any tasks</li>\n        )}\n\n        {items.map((item) => (\n          <ListItem item={item} onRemove={handleItemRemove} key={item} />\n        ))}\n      </ul>\n\n      <Form onAdd={handleItemAdd} />\n    </>\n  );\n}\n\nexport default TODOList;\n","import React from 'react';\nimport styles from './index.module.css';\n\nimport TODOList from 'components/TODOList';\n\nfunction App() {\n  return (\n    <section className={styles.app}>\n      <h1>TODO list with TS</h1>\n\n      <TODOList />\n    </section>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}